; Configuración de bits de configuración (Fuses)
CONFIG  FOSC = INTOSCIO_EC   ; Usa el oscilador interno a 8 MHz
CONFIG  WDT = OFF            ; Deshabilitar el Watchdog Timer
CONFIG  LVP = OFF            ; Deshabilitar la programación en bajo voltaje
CONFIG  PBADEN = OFF         ; Configurar los pines de PORTB como digitales
CONFIG  MCLRE = OFF          ; Pin MCLR deshabilitado
    
#include <xc.inc>

; Sección para el vector de reinicio
PSECT  resetVec, class=CODE, reloc=2, abs
ORG 0X00
    GOTO Inicio
    
; Sección de código principal
PSECT  main_code, class=CODE, reloc=2  
Inicio:
    MOVLW   0b11110110      ; Poner 8MHz en el oscilador
    MOVWF   OSCCON
    
    CLRF    TRISB           ; Configurar PORTB como salida (LEDs en RB0-RB3)
    BSF     TRISD,0         ; Configurar RD0 como entrada (botón)
    CLRF    LATB            ; Apagar todos los LEDs inicialmente
    CLRF    Secuencia       ; Inicializar en secuencia 0
    
Loop_Principal:
    ; Verificar botón (RD0) - cuando se presiona va a 0V (GND)
    BTFSC   PORTD,0         ; Si RD0 = 0 (no presionado), salta la siguiente línea
    GOTO    Cambiar_Secuencia
    
    ; Ejecutar la secuencia actual
    MOVF    Secuencia,W
    SUBLW   0
    BZ      Secuencia_0
    MOVF    Secuencia,W
    SUBLW   1
    BZ      Secuencia_1
    GOTO    Secuencia_2

Cambiar_Secuencia:
    CALL    Retardo_Debounce
    BTFSC   PORTD,0         
    GOTO    Siguiente_Sec
    GOTO    Loop_Principal

Siguiente_Sec:
    INCF    Secuencia,F
    MOVLW   3
    CPFSEQ  Secuencia
    GOTO    Esperar_Suelta
    CLRF    Secuencia       ; Reset a secuencia 0

Esperar_Suelta:
    BTFSC   PORTD,0         ; Esperar que se suelte el botón
    GOTO    Esperar_Suelta
    CALL    Retardo_Debounce
    CLRF    LATB            ; Apagar todos los LEDs al cambiar secuencia
    GOTO    Loop_Principal
    
; SECUENCIA 0: Alternancia de pares (RB0,RB1 vs RB2,RB3)
Secuencia_0:
    ; Verificar botón durante la secuencia
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    
    ; Encender LEDs 0 y 1, apagar 2 y 3
    MOVLW   0b00000011
    MOVWF   LATB
    CALL    Retardo_5_Check ; 5 segundos con verificación de botón
    
    ; Verificar botón otra vez
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    
    ; Encender LEDs 2 y 3, apagar 0 y 1
    MOVLW   0b00001100
    MOVWF   LATB
    CALL    Retardo_2_Check ; 2 segundos con verificación de botón
    
    GOTO    Loop_Principal

; SECUENCIA 1: Desplazamiento secuencial
Secuencia_1:
    ; LED 0
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    MOVLW   0b00000001
    MOVWF   LATB
    CALL    Retardo_500ms_Check
    
    ; LED 1
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    MOVLW   0b00000010
    MOVWF   LATB
    CALL    Retardo_500ms_Check
    
    ; LED 2
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    MOVLW   0b00000100
    MOVWF   LATB
    CALL    Retardo_500ms_Check
    
    ; LED 3
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    MOVLW   0b00001000
    MOVWF   LATB
    CALL    Retardo_500ms_Check
    
    GOTO    Loop_Principal

; SECUENCIA 2: Parpadeo 
Secuencia_2:
    ; Todos encendidos 1 segundo
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    MOVLW   0b00001111
    MOVWF   LATB
    CALL    Retardo_1_Check
    
    ; Todos apagados 0.5 segundos
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    CLRF    LATB
    CALL    Retardo_500ms_Check
    
    ; Todos encendidos 0.5 segundos
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    MOVLW   0b00001111
    MOVWF   LATB
    CALL    Retardo_500ms_Check
    
    ; Todos apagados 0.5 segundos
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    CLRF    LATB
    CALL    Retardo_500ms_Check
    
    ; Todos encendidos 2 segundos
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    MOVLW   0b00001111
    MOVWF   LATB
    CALL    Retardo_2_Check
    
    ; Todos apagados 1 segundo
    BTFSC   PORTD,0
    GOTO    Cambiar_Secuencia
    CLRF    LATB
    CALL    Retardo_1_Check
    
    GOTO    Loop_Principal

; === RETARDOS ===

Retardo_5_Check:
    MOVLW   50              ; 50 iteraciones de 100ms = 5000ms
    MOVWF   Temp_Counter
Loop_5_Check:
    CALL    Retardo_100ms
    BTFSC   PORTD,0         
    RETURN
    DECFSZ  Temp_Counter,F
    GOTO    Loop_5_Check
    RETURN

Retardo_2_Check:
    MOVLW   20              ; 20 iteraciones de 100ms = 2000ms
    MOVWF   Temp_Counter
Loop_2_Check:
    CALL    Retardo_100ms
    BTFSC   PORTD,0
    RETURN
    DECFSZ  Temp_Counter,F
    GOTO    Loop_2_Check
    RETURN

Retardo_1_Check:
    MOVLW   10              ; 10 iteraciones de 100ms = 1000ms
    MOVWF   Temp_Counter
Loop_1_Check:
    CALL    Retardo_100ms
    BTFSC   PORTD,0
    RETURN
    DECFSZ  Temp_Counter,F
    GOTO    Loop_1_Check
    RETURN

Retardo_500ms_Check:
    MOVLW   5               ; 5 iteraciones de 100ms = 500ms
    MOVWF   Temp_Counter
Loop_500ms_Check:
    CALL    Retardo_100ms
    BTFSC   PORTD,0
    RETURN
    DECFSZ  Temp_Counter,F
    GOTO    Loop_500ms_Check
    RETURN

; Retardo base de 100ms
Retardo_100ms:
    MOVLW   0b11111010      ; Ajustado para ~100ms
    MOVWF   Rcount1
    MOVLW   0b00110010
    MOVWF   Rcount2
    MOVLW   0b00000010
    MOVWF   Rcount3
    CALL    Rloop
    RETURN

Retardo_Debounce:
    MOVLW   0b11111010      ; ~20ms
    MOVWF   Rcount1
    MOVLW   0b00010000
    MOVWF   Rcount2
    MOVLW   0b00000001
    MOVWF   Rcount3
    CALL    Rloop
    RETURN
    
Rloop:
    MOVF    Rcount3, W
    MOVWF   C3    
Loop3:
    MOVF    Rcount2, W
    MOVWF   C2
Loop2:
    MOVF    Rcount1, W
    MOVWF   C1 
Loop1:
    DECFSZ  C1,F
    GOTO    Loop1
    
    DECFSZ  C2,F
    GOTO    Loop2
    
    DECFSZ  C3,F
    GOTO    Loop3
    
    RETURN
   
PSECT udata                     ; Sección de datos sin inicializar (variables en RAM)
C1:                DS 1         
C2:                DS 1         
C3:                DS 1
Rcount1:           DS 1
Rcount2:           DS 1
Rcount3:           DS 1
Secuencia:         DS 1         ; Variable para la secuencia actual (0-2)
Temp_Counter:      DS 1         ; Contador temporal para retardos
    
END
